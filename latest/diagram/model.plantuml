
@startuml
'Automatically generated by spec-parser v3.0.1 on 2025-02-28T10:04:00.956004+00:00

title SPDXv3 model
scale 4000*4000
hide methods
skinparam packageStyle folder

package Software {
}
package Lite {
}
package SimpleLicensing {
}
package Core {
}
package AI {
}
package Dataset {
}
package Licensing {
}
package Security {
}
package Extension {
}
package ExpandedLicensing {
}
package Build {
}
class Software.ContentIdentifier {
	contentIdentifierType 1:1
	contentIdentifierValue 1:1
}
class Software.File {
	/Core/contentType 0:1
	fileKind 0:1
}
class Software.Snippet {
	byteRange 0:1
	lineRange 0:1
	snippetFromFile 1:1
}
class Software.Sbom {
	sbomType 0:*
}
class Software.Package {
	downloadLocation 0:1
	homePage 0:1
	packageUrl 0:1
	packageVersion 0:1
	sourceInfo 0:1
}
abstract Software.SoftwareArtifact {
	additionalPurpose 0:*
	attributionText 0:*
	contentIdentifier 0:*
	copyrightText 0:1
	primaryPurpose 0:1
}
abstract SimpleLicensing.AnyLicenseInfo {
}
class SimpleLicensing.LicenseExpression {
	customIdToUri 0:*
	licenseExpression 1:1
	licenseListVersion 0:1
}
class SimpleLicensing.SimpleLicensingText {
	licenseText 1:1
}
class Core.Relationship {
	completeness 0:1
	endTime 0:1
	from 1:1
	relationshipType 1:1
	startTime 0:1
	to 1:*
}
abstract Core.IntegrityMethod {
	comment 0:1
}
class Core.Bundle {
	context 0:1
}
abstract Core.Element {
	comment 0:1
	creationInfo 1:1
	description 0:1
	extension 0:*
	externalIdentifier 0:*
	externalRef 0:*
	name 0:1
	spdxId 1:1
	summary 0:1
	verifiedUsing 0:*
}
class Core.ExternalRef {
	comment 0:1
	contentType 0:1
	externalRefType 0:1
	locator 0:*
}
class Core.DictionaryEntry {
	key 1:1
	value 0:1
}
class Core.Bom {
}
class Core.ExternalIdentifier {
	comment 0:1
	externalIdentifierType 1:1
	identifier 1:1
	identifierLocator 0:*
	issuingAuthority 0:1
}
class Core.ExternalMap {
	definingArtifact 0:1
	externalSpdxId 1:1
	locationHint 0:1
	verifiedUsing 0:*
}
class Core.PositiveIntegerRange {
	beginIntegerRange 1:1
	endIntegerRange 1:1
}
class Core.PackageVerificationCode {
	algorithm 1:1
	hashValue 1:1
	packageVerificationCodeExcludedFile 0:*
}
class Core.CreationInfo {
	comment 0:1
	created 1:1
	createdBy 1:*
	createdUsing 0:*
	specVersion 1:1
}
class Core.Organization {
}
class Core.Hash {
	algorithm 1:1
	hashValue 1:1
}
class Core.IndividualElement {
}
class Core.Agent {
}
class Core.SoftwareAgent {
}
class Core.LifecycleScopedRelationship {
	scope 0:1
}
class Core.Tool {
}
class Core.NamespaceMap {
	namespace 1:1
	prefix 1:1
}
abstract Core.ElementCollection {
	element 0:*
	profileConformance 0:*
	rootElement 0:*
}
class Core.Annotation {
	annotationType 1:1
	contentType 0:1
	statement 0:1
	subject 1:1
}
abstract Core.Artifact {
	builtTime 0:1
	originatedBy 0:*
	releaseTime 0:1
	standardName 0:*
	suppliedBy 0:1
	supportLevel 0:*
	validUntilTime 0:1
}
class Core.SpdxDocument {
	dataLicense 0:1
	import 0:*
	namespaceMap 0:*
}
class Core.Person {
}
class AI.EnergyConsumption {
	finetuningEnergyConsumption 0:*
	inferenceEnergyConsumption 0:*
	trainingEnergyConsumption 0:*
}
class AI.AIPackage {
	autonomyType 0:1
	domain 0:*
	energyConsumption 0:1
	hyperparameter 0:*
	informationAboutApplication 0:1
	informationAboutTraining 0:1
	limitation 0:1
	metric 0:*
	metricDecisionThreshold 0:*
	modelDataPreprocessing 0:*
	modelExplainability 0:*
	safetyRiskAssessment 0:1
	standardCompliance 0:*
	typeOfModel 0:*
	useSensitivePersonalInformation 0:1
}
class AI.EnergyConsumptionDescription {
	energyQuantity 1:1
	energyUnit 1:1
}
class Dataset.DatasetPackage {
	anonymizationMethodUsed 0:*
	confidentialityLevel 0:1
	dataCollectionProcess 0:1
	dataPreprocessing 0:*
	datasetAvailability 0:1
	datasetNoise 0:1
	datasetSize 0:1
	datasetType 1:*
	datasetUpdateMechanism 0:1
	hasSensitivePersonalInformation 0:1
	intendedUse 0:1
	knownBias 0:*
	sensor 0:*
}
class Security.CvssV3VulnAssessmentRelationship {
	score 1:1
	severity 1:1
	vectorString 1:1
}
class Security.VexAffectedVulnAssessmentRelationship {
	actionStatement 1:1
	actionStatementTime 0:1
}
abstract Security.VulnAssessmentRelationship {
	/Core/suppliedBy 0:1
	assessedElement 0:1
	modifiedTime 0:1
	publishedTime 0:1
	withdrawnTime 0:1
}
class Security.CvssV4VulnAssessmentRelationship {
	score 1:1
	severity 1:1
	vectorString 1:1
}
class Security.SsvcVulnAssessmentRelationship {
	decisionType 1:1
}
class Security.VexNotAffectedVulnAssessmentRelationship {
	impactStatement 0:1
	impactStatementTime 0:1
	justificationType 0:1
}
class Security.VexUnderInvestigationVulnAssessmentRelationship {
}
class Security.Vulnerability {
	modifiedTime 0:1
	publishedTime 0:1
	withdrawnTime 0:1
}
class Security.CvssV2VulnAssessmentRelationship {
	score 1:1
	vectorString 1:1
}
abstract Security.VexVulnAssessmentRelationship {
	statusNotes 0:1
	vexVersion 0:1
}
class Security.EpssVulnAssessmentRelationship {
	percentile 1:1
	probability 1:1
}
class Security.ExploitCatalogVulnAssessmentRelationship {
	catalogType 1:1
	exploited 1:1
	locator 1:1
}
class Security.VexFixedVulnAssessmentRelationship {
}
class Extension.CdxPropertiesExtension {
	cdxProperty 1:*
}
class Extension.CdxPropertyEntry {
	cdxPropName 1:1
	cdxPropValue 0:1
}
abstract Extension.Extension {
}
class ExpandedLicensing.DisjunctiveLicenseSet {
	member 2:*
}
class ExpandedLicensing.OrLaterOperator {
	subjectLicense 1:1
}
abstract ExpandedLicensing.License {
	/SimpleLicensing/licenseText 1:1
	isDeprecatedLicenseId 0:1
	isFsfLibre 0:1
	isOsiApproved 0:1
	licenseXml 0:1
	obsoletedBy 0:1
	seeAlso 0:*
	standardLicenseHeader 0:1
	standardLicenseTemplate 0:1
}
class ExpandedLicensing.CustomLicense {
}
class ExpandedLicensing.ListedLicense {
	deprecatedVersion 0:1
	listVersionAdded 0:1
}
abstract ExpandedLicensing.ExtendableLicense {
}
class ExpandedLicensing.ListedLicenseException {
	deprecatedVersion 0:1
	listVersionAdded 0:1
}
class ExpandedLicensing.WithAdditionOperator {
	subjectAddition 1:1
	subjectExtendableLicense 1:1
}
class ExpandedLicensing.ConjunctiveLicenseSet {
	member 2:*
}
class ExpandedLicensing.CustomLicenseAddition {
}
class ExpandedLicensing.IndividualLicensingInfo {
}
abstract ExpandedLicensing.LicenseAddition {
	additionText 1:1
	isDeprecatedAdditionId 0:1
	licenseXml 0:1
	obsoletedBy 0:1
	seeAlso 0:*
	standardAdditionTemplate 0:1
}
class Build.Build {
	buildEndTime 0:1
	buildId 0:1
	buildStartTime 0:1
	buildType 1:1
	configSourceDigest 0:*
	configSourceEntrypoint 0:*
	configSourceUri 0:*
	environment 0:*
	parameter 0:*
}
enum Software.ContentIdentifierType {
}
enum Software.SbomType {
}
enum Software.FileKindType {
}
enum Software.SoftwarePurpose {
}
enum Core.RelationshipCompleteness {
}
enum Core.ExternalRefType {
}
enum Core.ExternalIdentifierType {
}
enum Core.ProfileIdentifierType {
}
enum Core.AnnotationType {
}
enum Core.PresenceType {
}
enum Core.LifecycleScopeType {
}
enum Core.RelationshipType {
}
enum Core.HashAlgorithm {
}
enum Core.SupportType {
}
enum AI.EnergyUnitType {
}
enum AI.SafetyRiskAssessmentType {
}
enum Dataset.DatasetAvailabilityType {
}
enum Dataset.ConfidentialityLevelType {
}
enum Dataset.DatasetType {
}
enum Security.VexJustificationType {
}
enum Security.ExploitCatalogType {
}
enum Security.CvssSeverityType {
}
enum Security.SsvcDecisionType {
}
class Core.MediaType {
}
class Core.SemVer {
}
class Core.DateTime {
}
Software.ContentIdentifier --|> IntegrityMethod
Software.File --|> SoftwareArtifact
Software.Snippet --|> SoftwareArtifact
Software.Sbom --|> Bom
Software.Package --|> SoftwareArtifact
Software.SoftwareArtifact --|> Artifact
SimpleLicensing.AnyLicenseInfo --|> Element
SimpleLicensing.LicenseExpression --|> AnyLicenseInfo
SimpleLicensing.SimpleLicensingText --|> Element
Core.Relationship --|> Element
Core.Bundle --|> ElementCollection
Core.Bom --|> Bundle
Core.PackageVerificationCode --|> IntegrityMethod
Core.Organization --|> Agent
Core.Hash --|> IntegrityMethod
Core.IndividualElement --|> Element
Core.Agent --|> Element
Core.SoftwareAgent --|> Agent
Core.LifecycleScopedRelationship --|> Relationship
Core.Tool --|> Element
Core.ElementCollection --|> Element
Core.Annotation --|> Element
Core.Artifact --|> Element
Core.SpdxDocument --|> ElementCollection
Core.Person --|> Agent
AI.AIPackage --|> Package
Dataset.DatasetPackage --|> Package
Security.CvssV3VulnAssessmentRelationship --|> VulnAssessmentRelationship
Security.VexAffectedVulnAssessmentRelationship --|> VexVulnAssessmentRelationship
Security.VulnAssessmentRelationship --|> Relationship
Security.CvssV4VulnAssessmentRelationship --|> VulnAssessmentRelationship
Security.SsvcVulnAssessmentRelationship --|> VulnAssessmentRelationship
Security.VexNotAffectedVulnAssessmentRelationship --|> VexVulnAssessmentRelationship
Security.VexUnderInvestigationVulnAssessmentRelationship --|> VexVulnAssessmentRelationship
Security.Vulnerability --|> Artifact
Security.CvssV2VulnAssessmentRelationship --|> VulnAssessmentRelationship
Security.VexVulnAssessmentRelationship --|> VulnAssessmentRelationship
Security.EpssVulnAssessmentRelationship --|> VulnAssessmentRelationship
Security.ExploitCatalogVulnAssessmentRelationship --|> VulnAssessmentRelationship
Security.VexFixedVulnAssessmentRelationship --|> VexVulnAssessmentRelationship
Extension.CdxPropertiesExtension --|> Extension
ExpandedLicensing.DisjunctiveLicenseSet --|> AnyLicenseInfo
ExpandedLicensing.OrLaterOperator --|> ExtendableLicense
ExpandedLicensing.License --|> ExtendableLicense
ExpandedLicensing.CustomLicense --|> License
ExpandedLicensing.ListedLicense --|> License
ExpandedLicensing.ExtendableLicense --|> AnyLicenseInfo
ExpandedLicensing.ListedLicenseException --|> LicenseAddition
ExpandedLicensing.WithAdditionOperator --|> AnyLicenseInfo
ExpandedLicensing.ConjunctiveLicenseSet --|> AnyLicenseInfo
ExpandedLicensing.CustomLicenseAddition --|> LicenseAddition
ExpandedLicensing.IndividualLicensingInfo --|> AnyLicenseInfo
ExpandedLicensing.LicenseAddition --|> Element
Build.Build --|> Element
Software.ContentIdentifier::contentIdentifierType --> ContentIdentifierType
Software.File::/Core/contentType --> MediaType
Software.File::fileKind --> FileKindType
Software.Snippet::byteRange --> PositiveIntegerRange
Software.Snippet::lineRange --> PositiveIntegerRange
Software.Snippet::snippetFromFile --> File
Software.Sbom::sbomType --> SbomType
Software.SoftwareArtifact::additionalPurpose --> SoftwarePurpose
Software.SoftwareArtifact::contentIdentifier --> ContentIdentifier
Software.SoftwareArtifact::primaryPurpose --> SoftwarePurpose
SimpleLicensing.LicenseExpression::customIdToUri --> DictionaryEntry
SimpleLicensing.LicenseExpression::licenseListVersion --> SemVer
Core.Relationship::completeness --> RelationshipCompleteness
Core.Relationship::endTime --> DateTime
Core.Relationship::from --> Element
Core.Relationship::relationshipType --> RelationshipType
Core.Relationship::startTime --> DateTime
Core.Relationship::to --> Element
Core.Element::creationInfo --> CreationInfo
Core.Element::extension --> Extension
Core.Element::externalIdentifier --> ExternalIdentifier
Core.Element::externalRef --> ExternalRef
Core.Element::verifiedUsing --> IntegrityMethod
Core.ExternalRef::contentType --> MediaType
Core.ExternalRef::externalRefType --> ExternalRefType
Core.ExternalIdentifier::externalIdentifierType --> ExternalIdentifierType
Core.ExternalMap::definingArtifact --> Artifact
Core.ExternalMap::verifiedUsing --> IntegrityMethod
Core.PackageVerificationCode::algorithm --> HashAlgorithm
Core.CreationInfo::created --> DateTime
Core.CreationInfo::createdBy --> Agent
Core.CreationInfo::createdUsing --> Tool
Core.CreationInfo::specVersion --> SemVer
Core.Hash::algorithm --> HashAlgorithm
Core.LifecycleScopedRelationship::scope --> LifecycleScopeType
Core.ElementCollection::element --> Element
Core.ElementCollection::profileConformance --> ProfileIdentifierType
Core.ElementCollection::rootElement --> Element
Core.Annotation::annotationType --> AnnotationType
Core.Annotation::contentType --> MediaType
Core.Annotation::subject --> Element
Core.Artifact::builtTime --> DateTime
Core.Artifact::originatedBy --> Agent
Core.Artifact::releaseTime --> DateTime
Core.Artifact::suppliedBy --> Agent
Core.Artifact::supportLevel --> SupportType
Core.Artifact::validUntilTime --> DateTime
Core.SpdxDocument::dataLicense --> AnyLicenseInfo
Core.SpdxDocument::import --> ExternalMap
Core.SpdxDocument::namespaceMap --> NamespaceMap
AI.EnergyConsumption::finetuningEnergyConsumption --> EnergyConsumptionDescription
AI.EnergyConsumption::inferenceEnergyConsumption --> EnergyConsumptionDescription
AI.EnergyConsumption::trainingEnergyConsumption --> EnergyConsumptionDescription
AI.AIPackage::autonomyType --> PresenceType
AI.AIPackage::energyConsumption --> EnergyConsumption
AI.AIPackage::hyperparameter --> DictionaryEntry
AI.AIPackage::metric --> DictionaryEntry
AI.AIPackage::metricDecisionThreshold --> DictionaryEntry
AI.AIPackage::safetyRiskAssessment --> SafetyRiskAssessmentType
AI.AIPackage::useSensitivePersonalInformation --> PresenceType
AI.EnergyConsumptionDescription::energyUnit --> EnergyUnitType
Dataset.DatasetPackage::confidentialityLevel --> ConfidentialityLevelType
Dataset.DatasetPackage::datasetAvailability --> DatasetAvailabilityType
Dataset.DatasetPackage::datasetType --> DatasetType
Dataset.DatasetPackage::hasSensitivePersonalInformation --> PresenceType
Dataset.DatasetPackage::sensor --> DictionaryEntry
Security.CvssV3VulnAssessmentRelationship::severity --> CvssSeverityType
Security.VexAffectedVulnAssessmentRelationship::actionStatementTime --> DateTime
Security.VulnAssessmentRelationship::/Core/suppliedBy --> Agent
Security.VulnAssessmentRelationship::assessedElement --> SoftwareArtifact
Security.VulnAssessmentRelationship::modifiedTime --> DateTime
Security.VulnAssessmentRelationship::publishedTime --> DateTime
Security.VulnAssessmentRelationship::withdrawnTime --> DateTime
Security.CvssV4VulnAssessmentRelationship::severity --> CvssSeverityType
Security.SsvcVulnAssessmentRelationship::decisionType --> SsvcDecisionType
Security.VexNotAffectedVulnAssessmentRelationship::impactStatementTime --> DateTime
Security.VexNotAffectedVulnAssessmentRelationship::justificationType --> VexJustificationType
Security.Vulnerability::modifiedTime --> DateTime
Security.Vulnerability::publishedTime --> DateTime
Security.Vulnerability::withdrawnTime --> DateTime
Security.ExploitCatalogVulnAssessmentRelationship::catalogType --> ExploitCatalogType
Extension.CdxPropertiesExtension::cdxProperty --> CdxPropertyEntry
ExpandedLicensing.DisjunctiveLicenseSet::member --> AnyLicenseInfo
ExpandedLicensing.OrLaterOperator::subjectLicense --> License
ExpandedLicensing.WithAdditionOperator::subjectAddition --> LicenseAddition
ExpandedLicensing.WithAdditionOperator::subjectExtendableLicense --> ExtendableLicense
ExpandedLicensing.ConjunctiveLicenseSet::member --> AnyLicenseInfo
Build.Build::buildEndTime --> DateTime
Build.Build::buildStartTime --> DateTime
Build.Build::configSourceDigest --> Hash
Build.Build::environment --> DictionaryEntry
Build.Build::parameter --> DictionaryEntry

@enduml
